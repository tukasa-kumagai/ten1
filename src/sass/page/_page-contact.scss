@use "global" as *;


.page-contact {

max-width: rem(500) ;
margin: 0 auto;
margin-top: rem(28);


@include mq("md") {

  max-width: rem(700) ;

}
}

.page-contact__inner  {
position: relative;

@include mq("md") {


}


}
.page-contact__bg-img{
    width: rem(120);
    display: flex;
    left: calc(50% - min(48.5vw, 38.75rem));
    position: absolute;
    top: -18%;
    @include mq("md") {

      width: rem(302);
    }
}
.page-contact__button-inner {
  text-align: center;
  margin-top: rem(40);

  @include mq("md") {
    margin-top: rem(30);
    text-align: center;
  }
}



//form

.Form {
  margin-top: 40px;
  margin-left: auto;
  margin-right: auto;
  max-width: 700px;
  @include mq("md") {
    margin-top: 80px;
  }
}

.Form-Item {
  border-bottom: 1px dotted $green;
  padding-bottom: 40px;
  padding-top: 40px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: left;
  max-width: rem(700);
    margin: 0 auto;
    padding-left: 0;
    padding-right: 0;
    padding-top: 16px;
    padding-bottom: 21px;
    flex-wrap: wrap;
  @include mq("md") {
    border-bottom: 1px dotted $green;
    padding-bottom: 40px;
    padding-top: 98px;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: rem(700);
      margin: 0 auto;
      flex-wrap: nowrap;
  }
}

.Form-Item:nth-child(n+2) {
  padding-top: 25px;
  @include mq("md") {
    max-width: rem(700);
  }
}
.Form-Item:nth-child(n+5) {
  padding-top: 6px;
  @include mq("md") {
    max-width: rem(700);
  }
}
.Form-Item:nth-child(n+6) {
  padding-top: 22px;
  @include mq("md") {
    max-width: rem(700);
  }
}
.Form-Item:nth-child(5) {
  border-bottom: 1px solid #ddd;
  @include mq("md") {
    max-width: rem(700);
    padding-top: rem(15);
  }
}
.Form-Item-Label {
  width: 100%;
  max-width: 248px;
  letter-spacing: 0.05em;
  font-weight: bold;
  font-size: 18px;
 
  display: flex;
  align-items: center;
  font-size: 15px;
  @include mq("md") {
    font-size: 18px;
    max-width: 170px;
    margin-left: rem(0);
    max-width: 210px;
  
  
  }
}

.Form-Item-Label.isMsg {
  margin-top: 0;
  margin-bottom: auto;

  @include mq("md") {
    margin-top: 8px; 
  }
}

.Form-Item-Label-Required {
  border-radius: 0;
  padding-top: 0;
  padding-bottom: 0;
  width: 63px;
  font-size: 12px;
  display: inline-block;
  text-align: center;
  background: $red;
  color: #fff;
  font-size: 14px;
  margin-left: rem(8);

  @include mq("md") {
    margin-left: rem(1);
    padding-top: rem(0);
    padding-bottom: rem(0);
    width: rem(61);
  }
}

.Form-Item-Input {
  border: 1px solid $green;
  border-radius: 0px;
  margin-left: 0px;
  padding-left: 1em;
  padding-right: 1em;
  height: 40px;
  flex: 1;
  width: 100%;
  max-width: 410px;
  background: $white;
  font-size: 15px;
  color: $black;
  flex: inherit;
  margin-top: rem(17);
  @include mq("md") {
    font-size: 18px;  
    height: 38px;
    margin-left: rem(0);
    max-width: 480px;
  }
}

.Form-Item-Input:nth-child(n+3) {

 
}

.Form-Item-Textarea {
  border: 1px solid $green;
  border-radius: 6px;

  padding-left: 1em;
  padding-right: 1em;

  flex: 1;
  width: 100%;
  max-width: 410px;
  background: $white;
  margin-top: 18px;
  height: 200px;
  flex: inherit;
  font-size: 15px;

  @include mq("md") {
    margin-left: 0px;
    font-size: 18px;
    height: 200px;
    max-width: 480px;
    margin-top: rem(10);
  }
}

.Form-CheckItem {
  margin-top: 18px;

  @include mq("md") {
    margin-top: 24px;
  }
}

.Form-CheckItem-Label {
  margin-top: 20px;
  position: relative;
  top: 11px;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.Form-CheckItem-Label-Input {

}
.Form-CheckItem-Label-SquareIcon {
  border: 1px solid #ddd;
  display: block;
  flex: none;
  height: 21px;
      width: 21px;
      margin-right: 15px;


  @include mq("md") {
    width: 24px;
  }
}

.Form-CheckItem-Label-Text {
  padding-left: 6px;
  font-size: 3.6vw;
  margin-top: rem(16);
  @include mq("md") {
    padding-left: 8px;
  font-size: 24px;
  
  }
}

.Form-Btn {
  border-radius: 6px;
  margin-left: auto;
  margin-right: auto;
  display: block;
  letter-spacing: 0.05em;
  background: hsl(165, 50%, 57%);
  color: $black;
  font-weight: bold;
  opacity: 0.2;
  pointer-events: none;
  transition: all 0.2s;
justify-content: center;
margin-top: 24px;
padding-top: 8px;
padding-bottom: 8px;
width: 200px;
font-size: 16px;
justify-content: center;
  @include mq("md") {
    margin-top: 32px;
    padding-top: 20px;
    padding-bottom: 20px;
    font-size: 20px;
  }
}



.Form-Btn.button__text {

}
.Form-Btn.isActive {
  opacity: 1;
  pointer-events: inherit;
}
.Form-CheckItem-Label-Input:checked + *:before {
  content: "";
  display: block;
  width: 18px;
  height: 2px;
  background: #5bc8ac;
  transform-origin: bottom left;
  transform: rotateZ(90deg);
}
.Form-CheckItem-Label-Input:checked + *:after {
  content: "";
  display: block;
  width: 8px;
  height: 2px;
  background: #5bc8ac;
  transform-origin: bottom left;
  transform: rotateZ(0deg);
}
.Form-CheckItem-Label-Input:checked + * {
  width: 0;
  height: 0;
  transform: translate(5px, 7px) rotateZ(-135deg) scale(1.5);

  @include mq("md") {
    transform: translate(8px, 8px) rotateZ(-135deg) scale(1.5);
  }
}




.button {
  display: inline-block;
  width: rem(202);//横幅
  text-align: left;//文字を左に寄せる
  position: relative;
  z-index: 1;
  background-color: $green;//背景色
  padding-top: rem(11);//ボタン内範囲
  padding-left: rem(40);//ボタン内範囲
  padding-bottom: rem(15);//ボタン内範囲
  border: rem(1) solid $green;//ボタン縁色
  transition: background-color .3s;
}

.form-btn__text {
  font-size: rem(14);///文字サイズ
  line-height: 1.5714;//文字の高さ
  color: $white;//文字の色
  font-family: $second-font-family;
  font-weight: $regular;//文字太さ
  transition: color .3s;//文字色の変化速度

}

.form-btn__text::before {//.buttonの前方
  background: $white;//アニメーション時の色
  position: absolute;//親要素の左上にピッタリとつける
  top: 0;//親要素の左上にピッタリとつける//上方向
  left: 0;//親要素の左上にピッタリとつける//左方向
  content: '';//擬似要素
  width: 100%;//水平(X軸)方向の大きさがそのままの大きさになる
  height: 100%;//水平(X軸)方向の大きさがそのままの大きさになる
  transform: scale(0, 1);//水平(X軸)方向の大きさがそのままの大きさになるwith,height,transform: scale(0, 1);はセット
  transform-origin: left top;//背景が変わる向き
  transition: .2s cubic-bezier(0.45, 0, 0.55, 1);//transition：変化速度 cubic-bezier:変化速度に緩急をつける
  z-index: -1;
}

.button::after {
  content: "";
  position: absolute;//位置の固定
  top: rem(4);//上位置
  left: rem(4);//左位置
  bottom: rem(-4);//下位置
  right: rem(-4);//右位置
  border: rem(1) solid $green;//縁の色
  z-index: -2;//位置の優先順位
}

.form-btn__text::after {//右矢印
  content: "";
  display: inline-block;
  width: rem(40);//線長さ
  height: rem(8);//線厚み
  border-bottom: rem(1) solid $white;//縦線
  border-right: rem(1) solid $white;//横線
  position: absolute;
  top: 40%;//上下の位置
  transform: skew(45deg);//縦線を曲げる
  margin-left: rem(5);//左文字との間
  transition: border .3s;
}

.button:hover .form-btn__text {//アニメーション・左文字色を変える
  color: $green;//左文字色を変える
}

.button:hover::before {
  transform: scale(1, 1);//buttonのアニメーションをX軸方向にそのままのサイズに変化させる
}

.button:hover .button__text::after {//アニメーション・右の矢印の色を変える
  border-color: $green;//右矢印の色を変える
}

.button--position2 {
display: none;

  @include mq("md") {
    display: inline;
    margin: 0 auto;
    margin-top: rem(64);

    
  }
}


//試作品
.contact-item,
.contact-body {
display: block;

}
.er {
  border-radius: 50%;
}
.contact-item {
  text-align: left; /* テキスト左寄せ */
  width: 30%; /* 横幅30%指定（グレーの背景色部分） */
  background-color: #eee; /* グレーの背景色 */
}

.contact-body {
  width: 70%; /* 横幅70%指定（白背景色部分） */
display: grid;
}


  /*ボックス枠のCSS*/
  .label_test:after {
    border: 1px solid $green;
    border-radius: 50%;
    content: "";
    display: block;
    height: 14px;
    left: 15px;
    margin: -8px 0 0 -2px;
    position: absolute;
    top: 50%;
    width: 14px;
  }

  .label_test {
    position: relative; 
    padding: 0 0 0 30px; 
    width: 104%;

  }

 .label_test:hover:after {
    border-color: #0171bd; 
 }
    .label_test:after, .label_test:before{
    position: absolute; 
    content: ""; 
    display: block; 
    top: 50%; 
    }
  /*チェックマークの追加*/
    .label_test:before {
      //border-bottom: 4px solid red; 
      border-right: 8px solid $green;
      height: 9px;
      left: 16px;
      margin-top: -6px;
      opacity: 0;
      /* transform: rotate(45deg); */
      width: 8px;
      border-radius: 100%;
    }
    /*チェックボックスがチェックされた時に動作する内容*/
    input[type=checkbox]:checked + .label_test:before {
    opacity: 1; 
    }